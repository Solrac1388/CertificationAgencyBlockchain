name: Build and Release Android APK

on:
  workflow_dispatch:
    inputs:
      release_notes:
        description: 'Additional release notes'
        required: false
        default: ''
      force_rebuild:
        description: 'Force rebuild even if no changes detected'
        required: false
        type: boolean
        default: false

env:
  ANDROID_STORE_PASSWORD: ${{ secrets.ANDROID_STORE_PASSWORD }}
  ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
  ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}

jobs:
  build-apk:
    runs-on: ubuntu-22.04
    timeout-minutes: 45
    outputs:
      version-name: ${{ steps.version-info.outputs.version-name }}
      nodes-count: ${{ steps.build-config.outputs.nodes-count }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: 'app/package-lock.json'

    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '11'

    - name: Install dependencies
      run: |
        cd app
        npm ci --prefer-offline --no-audit

    - name: Build configuration
      id: build-config
      run: |
        cd app/src/config
        
        echo "Building with pre-configured nodes..."
        
        # Count trusted nodes for output
        NODES_COUNT=$(grep -o 'host:' network.js | wc -l)
        echo "nodes-count=${NODES_COUNT}" >> $GITHUB_OUTPUT
        echo "Found ${NODES_COUNT} pre-configured nodes"

    - name: Version information
      id: version-info
      run: |
        cd app
        VERSION_NAME=$(grep '"version"' package.json | head -1 | awk -F '"' '{print $4}')
        echo "version-name=${VERSION_NAME}" >> $GITHUB_OUTPUT
        echo "Building version: ${VERSION_NAME}"

    - name: Setup keystore
      run: |
        cd app/android/app
        echo "${{ secrets.ANDROID_SIGNING_KEY }}" | base64 -d > blockchain-release-key.keystore

    - name: Pre-bundle JavaScript
      run: |
        cd app
        echo "Pre-bundling JavaScript..."
        
        mkdir -p android/app/src/main/assets
        npx react-native bundle \
          --platform android \
          --dev false \
          --entry-file index.js \
          --bundle-output android/app/src/main/assets/index.android.bundle \
          --assets-dest android/app/src/main/res \
          --reset-cache
          
        echo "JavaScript bundle created successfully"

    - name: Build release APK
      id: build
      run: |
        cd app/android
        
        echo "Starting APK build..."
        
        # Make gradlew executable
        chmod +x ./gradlew
        
        # Clean and build
        ./gradlew clean
        ./gradlew assembleRelease \
          -Pandroid.injected.signing.store.file=app/blockchain-release-key.keystore \
          -Pandroid.injected.signing.store.password="$ANDROID_STORE_PASSWORD" \
          -Pandroid.injected.signing.key.alias="$ANDROID_KEY_ALIAS" \
          -Pandroid.injected.signing.key.password="$ANDROID_KEY_PASSWORD" \
          -x bundleReleaseJsAndAssets \
          --no-daemon \
          --stacktrace
        
        echo "APK build completed successfully"

    - name: Prepare release assets
      run: |
        mkdir -p release-assets
        
        cd app/android/app/build/outputs/apk/release
        
        # Find the APK file
        APK_FILE=$(find . -name "*.apk" | head -1)
        
        if [ -z "$APK_FILE" ]; then
          echo "Error: No APK file found"
          exit 1
        fi
        
        # Copy APK with versioned name
        cp "$APK_FILE" "../../../../../../../release-assets/blockchain-app-v${{ steps.version-info.outputs.version-name }}.apk"
        
        echo "APK prepared: blockchain-app-v${{ steps.version-info.outputs.version-name }}.apk"
        ls -la "../../../../../../../release-assets/"

    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: blockchain-apk-v${{ steps.version-info.outputs.version-name }}
        path: release-assets/blockchain-app-v${{ steps.version-info.outputs.version-name }}.apk
        retention-days: 30

  create-release:
    needs: build-apk
    runs-on: ubuntu-22.04
    if: success()
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download APK artifact
      uses: actions/download-artifact@v4
      with:
        name: blockchain-apk-v${{ needs.build-apk.outputs.version-name }}
        path: release-assets

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ needs.build-apk.outputs.version-name }}
        release_name: Blockchain Certification App v${{ needs.build-apk.outputs.version-name }}
        body: |
          ## ðŸ“± Blockchain Certification Agency v${{ needs.build-apk.outputs.version-name }}
          
          **Ready-to-use Android application for blockchain-based identity certification**
          
          ### ðŸš€ Features:
          - **Persona Identity Verification**: Complete KYC process through Persona API
          - **RSA Key Generation**: Generate secure key pairs for digital signatures
          - **Blockchain Integration**: Connect to ${{ needs.build-apk.outputs.nodes-count }} pre-configured network nodes
          - **Certificate Management**: Store, view, and manage your digital certificates
          - **Email Key Backup**: Encrypted key pair delivery via email
          - **Network Discovery**: Automatic node discovery and failover
          
          ### ðŸ“‹ Installation:
          1. Download the APK file below
          2. Enable "Install from unknown sources" on your Android device
          3. Install the APK
          4. Launch the app and follow the setup wizard
          
          ### ðŸ”§ Quick Start:
          1. **Pre-configured nodes:** This version already includes network nodes
          2. **Identity verification:** The app will guide you through the Persona process
          3. **Certificates:** Generate your first certificate from the main screen
          
          ## Bug reports:
          
          If you encounter any issues, please create an issue with:
          - Device model
          - Android version
          - Steps to reproduce the problem
          
          **Additional notes:** ${{ github.event.inputs.release_notes || 'Stability improvements and new features.' }}
        draft: false
        prerelease: false
        
    - name: Upload APK to release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./release-assets/blockchain-app-v${{ needs.build-apk.outputs.version-name }}.apk
        asset_name: blockchain-app-v${{ needs.build-apk.outputs.version-name }}.apk
        asset_content_type: application/vnd.android.package-archive
        
    - name: Build summary
      run: |
        echo "Release created successfully"
        echo "APK: blockchain-app-v${{ needs.build-apk.outputs.version-name }}.apk"
        echo "Configured nodes: ${{ needs.build-apk.outputs.nodes-count }}"
        echo "Release URL: ${{ steps.create_release.outputs.html_url }}"